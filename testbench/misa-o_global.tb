//'timescale 1ns / 1ps

module tb_misao;

    // Instruções
        localparam [3:0] AND = 4'b0001;
        localparam [3:0] OR   = 4'b0101;
        localparam [3:0] XOR  = 4'b1001;
        localparam [3:0] SHF  = 4'b1101;
        localparam [3:0] ADD  = 4'b0011;
        localparam [3:0] INC  = 4'b1011;
        localparam [3:0] BEQZ = 4'b1011;
        localparam [3:0] JMP  = 4'b1111;
        localparam [3:0] NEG  = 4'b0010;
        localparam [3:0] RR   = 4'b0110;
        localparam [3:0] SR   = 4'b1010;
        localparam [3:0] SA   = 4'b1010;
        localparam [3:0] LK   = 4'b1110;
        localparam [3:0] LD   = 4'b0100;
        localparam [3:0] LDI  = 4'b1100;
        localparam [3:0] SW   = 4'b1000;
        localparam [3:0] NOP  = 4'b0000;
    //

    logic clk;
    logic rst;
    logic [15:0] mem_addr;
    logic  [3:0] mem_data_in;
    logic  [3:0] mem_data_out;
    logic        mem_rw;
    logic        mem_enable_read;
    logic        mem_enable_write;
    logic  [3:0] mem_data_line;

    misao dut(
        .clk(clk),
        .rst(rst),
        .mem_addr(mem_addr),
        .mem_data_in(mem_data_in),
        .mem_data_out(mem_data_out),
        .mem_enable_read(mem_enable_read),
        .mem_enable_write(mem_enable_write)
        //.mem_data_line(mem_data_line)
    );

    always #5 clk = ~clk;

    initial begin
        clk = 0;
        rst = 0;
        mem_enable_read = 0;
        mem_enable_write = 0;

        mem_data_in = 4'b0000;

        $dumpfile("../run/output.vcd");
        $dumpvars(0, tb_misao);

        $display("Iniciando teste...");

        #0  rst = 1;
        #10 rst = 0; mem_enable_read = 1;
        #20;
        @(negedge clk); mem_data_in = LDI;
        @(negedge clk); mem_data_in = 1;
        @(negedge clk); mem_data_in = SR;
        @(negedge clk); mem_data_in = LDI;
        @(negedge clk); mem_data_in = 3;
        @(negedge clk); mem_data_in = SR;
        @(negedge clk); mem_data_in = SR;
        @(negedge clk); mem_data_in = AND;
        @(negedge clk); mem_data_in = INC;
        @(negedge clk); mem_data_in = ADD;
        @(negedge clk); mem_data_in = SHF;
        @(negedge clk); mem_data_in = OR;
        @(negedge clk); mem_data_in = RR;
        @(negedge clk); mem_data_in = LDI;
        @(negedge clk); mem_data_in = 10;
        @(negedge clk); mem_data_in = LDI;
        @(negedge clk); mem_data_in = 6;
        @(negedge clk); mem_data_in = NOP;
        @(negedge clk); mem_data_in = SW;       #10;    mem_enable_read = 1'b0; mem_enable_write = 1'b1; #10; mem_enable_read = 1'b1; mem_enable_write = 1'b0;
        //@(negedge clk); mem_data_in = NOP;
        @(negedge clk); mem_data_in = LDI;
        @(negedge clk); mem_data_in = 9;
        @(negedge clk); mem_data_in = NOP;
        
        #10;
        //$display("Input: %b, Output: %b", mem_data_in, mem_data_out);
        $finish;
    end

endmodule